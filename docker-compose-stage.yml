version: "3.9"

services:

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning


  backend:
    container_name: backend
    build: .
    command: sh -c "python manage.py migrate && python manage.py loaddata --exclude contenttypes data.json && gunicorn core.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - SECRET_KEY=django-insecure-i^fuaa8x23jw3j89j6x=rbu)40g^oqmti9c$$@7i7lz*2x+qye4
      - DEBUG=False
      # - ALLOWED_HOST = "*"
      - DB_HOST=db
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    depends_on:
      - redis
      - db

  worker_redis:
    build: .
    container_name: worker_redis_celery
    command: sh -c "pip install django-redis && celery -A core worker --loglevel=info"
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend

  beat:
    build: .
    container_name: beat_redis_celery
    command: celery -A core beat --loglevel=info
    volumes:
      - .:/code/
    depends_on:
      - backend
      - redis
      - worker_redis

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./core/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend

volumes:
  static_volume:
  media_volume:
  postgres_data:


 
